AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  VPC:
    Description: Attache the VPC
    Type: AWS::EC2::VPC::Id
  Subnets:
    Description: My Subnets
    Type: List<AWS::EC2::Subnet::Id>
Resources:
  SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP port
      GroupName: !Sub ${AWS::StackName}-Security-Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: TigranHambardzumyan
        - Key: ResourceName
          Value: TigranHambardzumyan    
      VpcId: !Ref VPC    

  myASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: My Auto Scaling Group
      VPCZoneIdentifier:
       - !Select [ 0, !Ref Subnets ]
       - !Select [ 1, !Ref Subnets ]
       - !Select [ 2, !Ref Subnets ]
      Cooldown: 300
      MinSize: 1
      MaxSize: 2
      DesiredCapacity: 1
      HealthCheckGracePeriod: 300
      LaunchTemplate:
        LaunchTemplateId: !Ref myLaunchTemplate
        Version: !GetAtt myLaunchTemplate.LatestVersionNumber 
      # LoadBalancerNames: !Ref LoadBalancer
      TargetGroupARNs:
        - Ref: TargetGroup
        # - arn:aws:elasticloadbalancing:eu-central-1:482720962971:targetgroup/TargetGroupTigranHambardzumyan/ef9c74ba081f1061  
      Tags:
        - Key: Name
          Value: TigranHambardzumyan
          PropagateAtLaunch: "true"
        - Key: ResourceName
          Value: TigranHambardzumyan
          PropagateAtLaunch: "true"
  
  myLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateName: !Sub ${AWS::StackName}-launch-template
      LaunchTemplateData: 
        ImageId: ami-05f7491af5eef733a
        InstanceType: t2.micro
        KeyName: Tigran
        SecurityGroupIds: 
          - !Ref SG 
        UserData:
           Fn::Base64: !Sub |
              #!/bin/bash
              apt update -y
              apt upgrade -y
              apt install -y apache2
              systemctl start apache2
              systemctl enable apache2
              chmod 777 /var/www/html -R
              echo "<h1>This is the host Name: $(hostname -f)</h1>" > /var/www/html/index.html

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: NetworkLB
      Scheme: internet-facing
      Subnets:
        - !Select [ 0, !Ref Subnets ]
        - !Select [ 1, !Ref Subnets ]
        - !Select [ 2, !Ref Subnets ]
      Type: network
     
  Listener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: TCP     
     
  TargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Name: !Sub ${AWS::StackName}-TargetGroup
      Port: 80
      Protocol: TCP
      VpcId: !Ref VPC     
     
     
#Instead of Parametrs create a Security Group!!!  +
#configure LB with CPU
#Create a map for AMI
#It isn't secure Change It!! sudo chmod 777 /var/www/html -R
#Add Conditions and read the guide
      # Subnets:
      #   - !Select [ 0, !Ref Subnets ]
      #   - !Select [ 1, !Ref Subnets ]
      #   - !Select [ 2, !Ref Subnets ]
      # Type: network